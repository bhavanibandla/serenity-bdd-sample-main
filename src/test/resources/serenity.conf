webdriver {
#   driver = provided
#   autodownload = true
    wait.for.timeout=12
    timeouts.implicitlywait=5000
}
# headless.mode = true

# Chrome options can be defined using the chrome.switches property

# chrome.switches = """--start-maximized;--test-type;--no-sandbox;--ignore-certificate-errors;
#                    --disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;
#                    --incognito;--disable-infobars,--disable-gpu"""

serenity {
    project.name=Serenity BDD Automation Framework
#     take.screenshots=FOR_FAILURES
    take.screenshots=AFTER_EACH_STEP
    step.delay=10
    timeout=20
    use.unique.browser=true
    restart.browser.for.each=NEVER
#     restart.browser.for.each = scenario
    browser.each.scenario=false
    maintain.session=true
    console.colors=true
    logging="QUIET"
    test.root = "features"
    tag.failures = "true"
    report.show.manual.tests=true
    requirements.dir = src/test/resources
}

# environments {
#   run_with_local_chrome {
#     webdriver.driver = chrome
#     chrome {
#       switches = "--start-maximized;--enable-automation;--no-sandbox;--disable-popup-blocking;--disable-default-apps;--disable-infobars;--disable-gpu;--disable-extensions;"
#       preferences {
#         download: {
#           prompt_for_download: false
#           directory_upgrade: true
#           default_directory: "${user.dir}/downloaded-files"
#         }
#       }
#     }
#   }

#   run_with_local_firefox {
#     webdriver.driver = firefox
#     firefox {
#         arguments = "-headless"
#         preferences {
#         browser {
#           download {
#             folderList = 2
#             dir = "$TEMPDIR/downloads"
#             manager.showWhenStarting = false
#             useDownloadDir = true
#           }
#         helperApps {
#           neverAsk.saveToDisk = "application/octet-stream"
#           alwaysAsk.force = false
#         }
#       }
#     }
#     logLevel = INFO
#     acceptInsecureCerts = true
#     pageLoadStrategy = EAGER
#   }
#  }

 # Specify browserstack.user and browserstack.key on the command line, e.g.
 #  mvn verify -Denvironment=run_with_browserstack -Dbrowserstack.user=<MY_BROWSERSTACK_USER> -Dbrowserstack.key=<MY_API_KEY>

#   run_with_browserstack {
#      webdriver.driver = remote
#      webdriver.remote.url = "https://#{browserstack.user}:#{browserstack.key}@hub-cloud.browserstack.com/wd/hub"
#      headless.mode = false
#      browserstack {
#        os = "Windows"
#        os_version = "10"
#        browser = "Edge"
#        browser_version = "latest"
#        resolution = "1280x800"
#      }
#   }

 # Specify browserstack.user and browserstack.key on the command line, e.g.
 #  mvn verify -Denvironment=run_with_lambdatest -Dlt.user=<MY_LAMBDATEST_USER> -Dlt.key=<MY_API_KEY>

#   run_with_lambdatest {
#      webdriver.driver = remote
#      webdriver.remote.url = "https://#{lt.user}:#{lt.key}@{lt.grid}/wd/hub"
#      headless.mode = false
#      lambdatest {
#        os = "Windows"
#        os_version = "11"
#        browser = "Edge"
#        browser_version = "latest"
#        resolution = "1280x800"
#      }
#   }

# Define drivers for different platforms. Serenity will automatically pick the correct driver for the current platform

drivers {
  windows {
    webdriver.chrome.driver = "src/test/resources/webdriver/windows/chromedriver.exe"
    webdriver.gecko.driver = "src/test/resources/webdriver/windows/geckodriver.exe"
    webdriver.ie.driver = "src/test/resources/webdriver/windows/IEDriverServer.exe"
    webdriver.edge.driver = "src/test/resources/webdriver/windows/msedgedriver.exe"
  }
  mac {
    webdriver.chrome.driver = "src/test/resources/webdriver/mac/chromedriver"
    webdriver.gecko.driver = "src/test/resources/webdriver/mac/geckodriver"
    webdriver.edge.driver = "src/test/resources/webdriver/mac/msedgedriver"
  }
  linux {
    webdriver.chrome.driver = "src/test/resources/webdriver/linux/chromedriver"
    webdriver.gecko.driver = "src/test/resources/webdriver/linux/geckodriver"
    webdriver.edge.driver = "src/test/resources/webdriver/mac/msedgedriver"
  }
}
#
# # This section defines environment-specific configuration for different environments.
# # You can define normal Serenity properties, such as webdriver.base.url, or custom ones
# # You can find more details about this feature at https://johnfergusonsmart.com/environment-specific-configuration-in-serenity-bdd/
#
#  all {
#     home.page = "#{webdriver.base.url}"
#     inventory.page = "#{webdriver.base.url}/inventory.html"
#     cart.page = "#{webdriver.base.url}/cart.html"
#     checkout.step.one.page = "#{webdriver.base.url}/checkout-step-one.html"
#     checkout.step.two.page = "#{webdriver.base.url}/checkout-step-two.html"
#  }
#  default {
#     webdriver.base.url = "https://www.saucedemo.com/"
#  }
#  localhost {
#     webdriver.base.url = "https://www.saucedemo.com/"
#  }
#  dev {
#     webdriver.base.url = "https://www.saucedemo.com/"
#  }
#  staging {
#     webdriver.base.url = "https://www.saucedemo.com/"
#  }
#  prod {
#     webdriver.base.url = "https://www.saucedemo.com/"
#  }
# }
#
# # custom report environment details
# sysinfo {
#     lead = Bhavani Bandla
#     build = "${env.BUILD_NUMBER}"
#     Test Run {
#        Run By = "${env.USER}"
#        Java Version = "${java.version}"
#     }
# }